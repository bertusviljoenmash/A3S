@model RegisterTwoFactorViewModel

    <div class="float-inner login-float-inner white-background">
        <br />&nbsp;<br />
        <div><img src="~/img/a3s.svg" class="a3s-small-logo" /></div>
        <h2>Register Two-Factor Authentication</h2>

        @if (Model.TwoFACompulsary)
        {
            <p>Your organization requires two-factor authentication to be set up for your profile.</p>
        }

        @if (Model.AllowRegisterAuthenticator)
        {
    <div class="white-box">
        @if (Model.HasAuthenticator)
        {
            <h3>Manage Authenticator App</h3>
        }
        else
        {
            <h3>Register an Authenticator App</h3>
        }
        <br />
        <p>This allows you to register A3S with an authenticator app, like Google Authenticator, Microsoft Authenticator or FreeOTP Authenticator, that will generate one time passwords as a second security factor.</p>

        @if (Model.HasAuthenticator)
        {
            <button class="spoon-btn-primary" name="btnAuthenticator" id="btnAuthenticator" value="btnAuthenticator">Register Additional Authenticator</button>
            <br />@Html.Raw("&nbsp;")<br />
            <button class="spoon-btn" name="btnResetRecoveryCodes" id="btnResetRecoveryCodes" value="btnResetRecoveryCodes">Reset Recovery Codes</button>
            <br />@Html.Raw("&nbsp;")<br />
            <button class="spoon-btn" name="btnDeregisterAuthenticator" id="btnDeregisterAuthenticator" value="btnDeregisterAuthenticator">Remove Authenticator</button>
        }
        else
        {
            <button class="spoon-btn-primary" name="btnAuthenticator" id="btnAuthenticator" value="btnAuthenticator">Register Authenticator</button>
        }
    </div>

            <input type="hidden" name="RegisterAuthenticatorUrl" id="RegisterAuthenticatorUrl" value="@Url.Action("Register2FAAuthenticator", new { redirectUrl = Model.RedirectUrl })" />
            <input type="hidden" name="ResetRecoveryCodesUrl" id="ResetRecoveryCodesUrl" value="@Url.Action("ResetRecoveryCodes", new { redirectUrl = Model.RedirectUrl })" />
            <input type="hidden" name="DeregisterAuthenticatorUrl" id="DeregisterAuthenticatorUrl" value="@Url.Action("Deregister2FAAuthenticator", new { redirectUrl = Model.RedirectUrl })" />
        }

    <div class="row">
        @if (Model.TwoFACompulsary)
        {
            <input type="hidden" name="Cancel2FARegistration" id="Cancel2FARegistrationUrl" value="@Url.Action("Cancel2FARegistration", new { redirectUrl = Model.RedirectUrl })" />
            <button class="spoon-btn" name="btnCancel" id="btnCancel" value="btnCancel">Cancel</button>
        }
        else
        {
            <input type="hidden" name="RedirectUrl" id="RedirectUrl" value="@Model.RedirectUrl" />
            <button class="spoon-btn" name="btnContinueWithout" id="btnContinueWithout" value="btnContinueWithout">Skip</button>
        }

        @if (!Model.AllowRegisterAuthenticator)
        {
            <div class="alert alert-danger alert-dismissible login-screen-control show">
                <button type="button" class="close" aria-label="Close">
                    <img class="icons-general-blue-add" src="~/img/add_blue.svg" />
                </button>
                <div class="a3s-row">
                    <div class="alert-box-icon"><img src="~/img/alert.svg" /></div>
                    <div class="alert-text">There are no two-factor providers configured for this client.</div>
                </div>
            </div>
        }

    </div>
        <br />&nbsp;<br />
    </div>
    @section scripts {
        <script type="text/javascript" src="~/js/register-2fa.js"></script>
    }
